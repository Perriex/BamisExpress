{
  "swagger": "2.0",
  "info": {
    "description": "This is BamisExpress, A backend service for edit Bartarha.net webpage.",
    "version": "1.0.0",
    "title": "BamisExpress",
    "termsOfService": "https://bartarha.net/",
    "contact": {
      "email": "parna80as@gmail.com"
    }
  },
  "host": "Api.bamis.ir",
  "basePath": "/server",
  "tags": [
    {
      "name": "Component",
      "description": "A service for reordering components in Landing page."
    },
    {
      "name": "Filter",
      "description": "Change and add carousel and component API."
    },
    {
      "name": "Poster",
      "description": "Add and Change Posters of main banner"
    },
    {
      "name": "Text",
      "description": "Add and Change Texts of components"
    },
    {
      "name": "Video",
      "description": "Add and Change Video of websites"
    }
  ],
  "schemes": ["https", "http"],
  "paths": {
    "/orders": {
      "post": {
        "tags": ["Component"],
        "summary": "reorder of landing page components",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "schema": {
              "$ref": "#/definitions/orders"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "get": {
        "tags": ["Component"],
        "summary": "get order of landing page components",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/orders"
            }
          }
        }
      }
    },
    "/filter/{type}": {
      "post": {
        "tags": ["Filter"],
        "summary": "change filter of a components with key",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "schema": {
              "$ref": "#/definitions/filter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a desired filter for component"
          }
        }
      },
      "get": {
        "tags": ["Filter"],
        "summary": "get filter of a components with key",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a desired filter for component",
            "schema": {
              "$ref": "#/definitions/filter"
            }
          }
        }
      }
    },
    "/poster": {
      "post": {
        "tags": ["Poster"],
        "summary": "add poster of main banner",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "schema": {
              "$ref": "#/definitions/poster"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "get": {
        "tags": ["Poster"],
        "summary": "get posters for main banner",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/poster"
            }
          }
        }
      }
    },
    "/poster?name={name}": {
      "post": {
        "tags": ["Poster"],
        "summary": "Get poster with name",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/poster"
            }
          }
        }
      }
    },
    "/video": {
      "post": {
        "tags": ["Video"],
        "summary": "add video for product",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "schema": {
              "$ref": "#/definitions/video"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "get": {
        "tags": ["Video"],
        "summary": "get all videos",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/video"
            }
          }
        }
      }
    },
    "/video?name={name}": {
      "post": {
        "tags": ["Video"],
        "summary": "Get video with name",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/video"
            }
          }
        }
      }
    },
    "/text/{section}": {
      "post": {
        "tags": ["Text"],
        "summary": "add text of a component",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "query",
            "name": "section",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "body",
            "schema": {
              "$ref": "#/definitions/text"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "get": {
        "tags": ["Text"],
        "summary": "get text of a component",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "query",
            "name": "section",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/text"
            }
          }
        }
      }
    },
    "/text/edit/{section}": {
      "post": {
        "tags": ["Text"],
        "summary": "edit text of a component",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "query",
            "name": "section",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "body",
            "schema": {
              "$ref": "#/definitions/text"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },

  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    },
    "petstore_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://petstore.swagger.io/oauth/authorize",
      "flow": "implicit",
      "scopes": {
        "read:pets": "read your pets",
        "write:pets": "modify pets in your account"
      }
    }
  },
  "definitions": {
    "orders": {
      "name": "order",
      "type": "array",
      "items": {
        "id": 1,
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "display": {
            "type": "boolean"
          },
          "type": {
            "type": "string",
            "enum": [
              "full-carousel",
              "webinar-carousel",
              "consult-carousel",
              "tutoring-carousel",
              "none"
            ]
          }
        }
      }
    },
    "filter": {
      "name": "filter",
      "type": "object",
      "properties": {
        "GroupIds": {
          "type": "array",
          "items": { "id": 1, "type": "number" }
        },
        "CourseIds": {
          "type": "array",
          "items": { "id": 1, "type": "number" }
        },
        "maxPrice": {
          "type": "array",
          "items": { "id": 1, "type": "number" }
        },
        "minPrice": {
          "type": "array",
          "items": { "id": 1, "type": "number" }
        },
        "RankRangeIds": {
          "type": "array",
          "items": { "id": 1, "type": "number" }
        },
        "StatusIds": {
          "type": "array",
          "items": { "id": 1, "type": "number" }
        }
      }
    },
    "poster": {
      "name": "poster",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "img": {
          "type": "string"
        },
        "link": {
          "type": "string"
        }
      }
    },
    "video": {
      "name": "poster",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "video": {
          "type": "string"
        }
      }
    },
    "text": {
      "name": "text",
      "type": "object",
      "properties": {
        "text": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      }
    }
  }
}
